package com.tieutu.entities;
// Generated May 20, 2017 12:46:27 AM by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Floor generated by hbm2java
 */
@Entity
@Table(name = "floor", catalog = "store_manager")
public class Floor implements java.io.Serializable {

	private Integer id;
	private Restaurant restaurant;
	private String name;
	private String description;
	private Set<Tables> tableses = new HashSet<Tables>(0);

	public Floor() {
	}

	public Floor(Restaurant restaurant, String name) {
		this.restaurant = restaurant;
		this.name = name;
	}

	public Floor(Restaurant restaurant, String name, String description, Set<Tables> tableses) {
		this.restaurant = restaurant;
		this.name = name;
		this.description = description;
		this.tableses = tableses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "restaurant_id", nullable = false)
	public Restaurant getRestaurant() {
		return this.restaurant;
	}

	public void setRestaurant(Restaurant restaurant) {
		this.restaurant = restaurant;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "floor")
	public Set<Tables> getTableses() {
		return this.tableses;
	}

	public void setTableses(Set<Tables> tableses) {
		this.tableses = tableses;
	}

}
